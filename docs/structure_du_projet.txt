Le dossier data contient tout ce qui est images, vidéos, polices d'écriture, textes et même la configuration des paramètres.
Il contient aussi le modèle du système de neurones, et la source des jeux de données qui ont été utilisées pour entraîner le modèle.
data
        Ressources utilisées pour l'interface graphique
        assets
                Séparation des ressources selon le type du document
                board
                font
                images
                piece
                sound
                text
                        - credits.txt
                video
        Source des jeux de données
        dataset
                - sources.txt
        Modèle du système de neurones
        models
                v1
Description de la structure du projet
docs
        - structure_du_projet.txt
Les librairies que nécessite le projet pour être lancé
- requirements.txt
Le projet CheckThisOut
src
        Tout ce qui touche à la gestion du jeu d'échecs en général
        board
                L'objet Board, la gestion de la sélection des pièces et des fins de partie
                - board.py
                Les objets Move et la gestion des déplacements des pièces
                - move.py
                Tous les types de pièce et la génération des coups possibles selon le type de la pièce
                - piece.py
                L'objet Player, nécessité pour les IA et pour savoir si le roi est en échec
                - player.py
                Les objets Tile présent dans l'objet Board, facilite grandement l'accès aux pièces et aux coups possibles
                - tile.py
        Gestion de la configuration
        - config.py
        Constantes utilisées pour divers utilités sur plusieurs fichiers
        - constants.py
        Objets personnalisés créés dans le but de faciliter la création de l'interface graphique avec pygame
        - gui.py
        Dossier regroupant les différentes IA
        ia
                Le réseau de neurones
                ml
                        Fonctions pour construire dynamiquement le modèle et l'optimiseur à partir d'un fichier YAML
                        - builder.py
                        L'objet ChessDataset permet de traiter les parties présentes dans un fichier .pgn.
                        Les fichiers .pgn doivent être placer dans le dossier data/dataset.
                        - dataset.py
                        Fichier qui génère un mapping (au format JSON) de tous les coups possibles vers un entier.
                        - encoder.py
                        Fonctions pour charger les éléments nécessaires au fonctionnement du modèle et de son entraînement.
                        - loader.py
                        L'objet ChessModel qui contient l'architecture du model.
                        - model.py
                        Permet de tracer les informations relatives à l'entraînement du modèle.
                        - plotter.py
                        Fichier principal pour entraîner un modèle.
                        Pour entraîner un modèle, vous devez créer un dossier dédié dans data/models et y placer un fichier
                        config.yaml, en le configurant sur le même modèle que les autres. Avant d'exécuter ce script, 
                        assurez-vous d'avoir indiqué au début de celui-ci l'emplacement du dossier du modèle.
                        - train.py
                L'algorithme de Negamax
                - negamax.py
        Fichier à lancer pour CheckThisOut
        - main.py
        Interface graphique gérant différents menus
        scenes
                Le menu du "jeu"
                - game.py
                Les objets Menu et Scene servant à l'interface graphique, ainsi que des menus plus petits ne nécessitant pas d'un fichier
                - menu.py
                - scene.py
                Le menu paramètres
                - settings.py
                Le menu préparation d'une partie
                - setup.py
        Fonctions utilitaires et diverses utilisées dans le projet
        - utils.py